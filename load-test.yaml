apiVersion: v1
kind: Namespace
metadata:
  name: ks-load
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ks-config
  namespace: ks-load
data:
  FILE_SIZE: "SMALL"          # use either SMALL (~12KB) or LARGE (~500KB)
  DELAY: "0"                  # Delay between consecutive downloads.
  RATE_LIMIT: "500k"          # Limit download rate
  PARALLEL_DOWNLOADS: "50"   # Number of parallel downloads per client container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-server
  namespace: ks-load
spec:
  replicas: 5                 # Number of httpd servers
  selector:
    matchLabels:
      app: httpd-server
  template:
    metadata:
      labels:
        app: httpd-server
    spec:
      containers:
      - name: httpd
        image: kubeshark/ks-load-httpd:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpd-server
  namespace: ks-load
spec:
  selector:
    app: httpd-server
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: curl-client
  namespace: ks-load
spec:
  replicas: 10                    # umber of CURL client (each clients run parallel downloads)
  selector:
    matchLabels:
      app: curl-client
  template:
    metadata:
      labels:
        app: curl-client
    spec:
      containers:
      - name: curl
        image: alpine:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          apk add --no-cache curl
          while true; do
            for i in $(seq 1 ${PARALLEL_DOWNLOADS}); do
              if [ "${FILE_SIZE}" = "LARGE" ]; then
                curl --limit-rate ${RATE_LIMIT} -O http://httpd-server.ks-load.svc.cluster.local/smap.png &
              else
                curl --limit-rate ${RATE_LIMIT} -O http://httpd-server.ks-load.svc.cluster.local/ks_logo.png &
              fi
            done
            wait
            sleep ${DELAY}
          done
        envFrom:
        - configMapRef:
            name: ks-config
---
apiVersion: v1
kind: Service
metadata:
  name: curl-client
  namespace: ks-load
spec:
  selector:
    app: curl-client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80